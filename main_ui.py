# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui',
# licensing of 'main.ui' applies.
#
# Created: Mon Jun 22 23:18:50 2020
#      by: pyside2-uic  running on PySide2 5.13.1
#
# WARNING! All changes made in this file will be lost!

from PySide2 import QtCore, QtGui, QtWidgets

class Ui_MainWindow__individualHDA(object):
    def setupUi(self, MainWindow__individualHDA):
        MainWindow__individualHDA.setObjectName("MainWindow__individualHDA")
        MainWindow__individualHDA.resize(1472, 863)
        font = QtGui.QFont()
        font.setPointSize(11)
        MainWindow__individualHDA.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/main/icons/viewport_logo_trans.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow__individualHDA.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow__individualHDA)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_18.setSpacing(1)
        self.verticalLayout_18.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.splitter__whole_vertical = QtWidgets.QSplitter(self.centralwidget)
        self.splitter__whole_vertical.setOrientation(QtCore.Qt.Vertical)
        self.splitter__whole_vertical.setHandleWidth(3)
        self.splitter__whole_vertical.setObjectName("splitter__whole_vertical")
        self.stackedWidget__whole = QtWidgets.QStackedWidget(self.splitter__whole_vertical)
        self.stackedWidget__whole.setObjectName("stackedWidget__whole")
        self.page__ihda = QtWidgets.QWidget()
        self.page__ihda.setObjectName("page__ihda")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.page__ihda)
        self.verticalLayout_15.setSpacing(1)
        self.verticalLayout_15.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.splitter__whole_horizontal = QtWidgets.QSplitter(self.page__ihda)
        self.splitter__whole_horizontal.setOrientation(QtCore.Qt.Horizontal)
        self.splitter__whole_horizontal.setHandleWidth(3)
        self.splitter__whole_horizontal.setObjectName("splitter__whole_horizontal")
        self.layoutWidget = QtWidgets.QWidget(self.splitter__whole_horizontal)
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_4.setSpacing(1)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.splitter__cate_whole_vertical = QtWidgets.QSplitter(self.layoutWidget)
        self.splitter__cate_whole_vertical.setOrientation(QtCore.Qt.Vertical)
        self.splitter__cate_whole_vertical.setHandleWidth(3)
        self.splitter__cate_whole_vertical.setObjectName("splitter__cate_whole_vertical")
        self.layoutWidget1 = QtWidgets.QWidget(self.splitter__cate_whole_vertical)
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout_3.setSpacing(5)
        self.horizontalLayout_3.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.checkBox__casesensitive_cate = QtWidgets.QCheckBox(self.layoutWidget1)
        self.checkBox__casesensitive_cate.setCursor(QtCore.Qt.PointingHandCursor)
        self.checkBox__casesensitive_cate.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/main/icons/case_sensitive.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox__casesensitive_cate.setIcon(icon1)
        self.checkBox__casesensitive_cate.setIconSize(QtCore.QSize(20, 20))
        self.checkBox__casesensitive_cate.setObjectName("checkBox__casesensitive_cate")
        self.horizontalLayout_3.addWidget(self.checkBox__casesensitive_cate)
        self.lineEdit__search_cate = QtWidgets.QLineEdit(self.layoutWidget1)
        self.lineEdit__search_cate.setFrame(False)
        self.lineEdit__search_cate.setClearButtonEnabled(True)
        self.lineEdit__search_cate.setObjectName("lineEdit__search_cate")
        self.horizontalLayout_3.addWidget(self.lineEdit__search_cate)
        self.stackedWidget__category = QtWidgets.QStackedWidget(self.splitter__cate_whole_vertical)
        self.stackedWidget__category.setObjectName("stackedWidget__category")
        self.page__category = QtWidgets.QWidget()
        self.page__category.setObjectName("page__category")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.page__category)
        self.verticalLayout_16.setSpacing(1)
        self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.verticalLayout__category = QtWidgets.QVBoxLayout()
        self.verticalLayout__category.setSpacing(1)
        self.verticalLayout__category.setObjectName("verticalLayout__category")
        self.verticalLayout_16.addLayout(self.verticalLayout__category)
        self.stackedWidget__category.addWidget(self.page__category)
        self.verticalLayout_4.addWidget(self.splitter__cate_whole_vertical)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setSpacing(3)
        self.horizontalLayout_12.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_12.addItem(spacerItem)
        self.label__cate_count = QtWidgets.QLabel(self.layoutWidget)
        self.label__cate_count.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label__cate_count.setObjectName("label__cate_count")
        self.horizontalLayout_12.addWidget(self.label__cate_count)
        self.label__cate_count_suffix = QtWidgets.QLabel(self.layoutWidget)
        self.label__cate_count_suffix.setObjectName("label__cate_count_suffix")
        self.horizontalLayout_12.addWidget(self.label__cate_count_suffix)
        self.verticalLayout_4.addLayout(self.horizontalLayout_12)
        self.layoutWidget2 = QtWidgets.QWidget(self.splitter__whole_horizontal)
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.layoutWidget2)
        self.verticalLayout_6.setSpacing(1)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.splitter__ihda_whole_vertical = QtWidgets.QSplitter(self.layoutWidget2)
        self.splitter__ihda_whole_vertical.setOrientation(QtCore.Qt.Vertical)
        self.splitter__ihda_whole_vertical.setHandleWidth(3)
        self.splitter__ihda_whole_vertical.setObjectName("splitter__ihda_whole_vertical")
        self.layoutWidget3 = QtWidgets.QWidget(self.splitter__ihda_whole_vertical)
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.layoutWidget3)
        self.verticalLayout_5.setSpacing(1)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(3)
        self.horizontalLayout_2.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton__favorite_node = QtWidgets.QPushButton(self.layoutWidget3)
        self.pushButton__favorite_node.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__favorite_node.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/main/icons/ic_favorite_border_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__favorite_node.setIcon(icon2)
        self.pushButton__favorite_node.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__favorite_node.setCheckable(True)
        self.pushButton__favorite_node.setFlat(True)
        self.pushButton__favorite_node.setObjectName("pushButton__favorite_node")
        self.horizontalLayout_2.addWidget(self.pushButton__favorite_node)
        self.pushButton__thumbnail = QtWidgets.QPushButton(self.layoutWidget3)
        self.pushButton__thumbnail.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__thumbnail.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/main/icons/network_sop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__thumbnail.setIcon(icon3)
        self.pushButton__thumbnail.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__thumbnail.setCheckable(True)
        self.pushButton__thumbnail.setFlat(True)
        self.pushButton__thumbnail.setObjectName("pushButton__thumbnail")
        self.horizontalLayout_2.addWidget(self.pushButton__thumbnail)
        spacerItem1 = QtWidgets.QSpacerItem(198, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.pushButton__zoomin = QtWidgets.QPushButton(self.layoutWidget3)
        self.pushButton__zoomin.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__zoomin.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/main/icons/ic_zoom_in_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__zoomin.setIcon(icon4)
        self.pushButton__zoomin.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__zoomin.setFlat(True)
        self.pushButton__zoomin.setObjectName("pushButton__zoomin")
        self.horizontalLayout_2.addWidget(self.pushButton__zoomin)
        self.pushButton__zoomout = QtWidgets.QPushButton(self.layoutWidget3)
        self.pushButton__zoomout.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__zoomout.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/main/icons/ic_zoom_out_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__zoomout.setIcon(icon5)
        self.pushButton__zoomout.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__zoomout.setFlat(True)
        self.pushButton__zoomout.setObjectName("pushButton__zoomout")
        self.horizontalLayout_2.addWidget(self.pushButton__zoomout)
        self.doubleSpinBox__zoom = QtWidgets.QDoubleSpinBox(self.layoutWidget3)
        self.doubleSpinBox__zoom.setCursor(QtCore.Qt.PointingHandCursor)
        self.doubleSpinBox__zoom.setAlignment(QtCore.Qt.AlignCenter)
        self.doubleSpinBox__zoom.setDecimals(0)
        self.doubleSpinBox__zoom.setMinimum(10.0)
        self.doubleSpinBox__zoom.setMaximum(500.0)
        self.doubleSpinBox__zoom.setSingleStep(10.0)
        self.doubleSpinBox__zoom.setProperty("value", 100.0)
        self.doubleSpinBox__zoom.setObjectName("doubleSpinBox__zoom")
        self.horizontalLayout_2.addWidget(self.doubleSpinBox__zoom)
        self.line = QtWidgets.QFrame(self.layoutWidget3)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout_2.addWidget(self.line)
        self.pushButton__icon_mode = QtWidgets.QPushButton(self.layoutWidget3)
        self.pushButton__icon_mode.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__icon_mode.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/main/icons/ic_widgets_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__icon_mode.setIcon(icon6)
        self.pushButton__icon_mode.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__icon_mode.setCheckable(True)
        self.pushButton__icon_mode.setChecked(True)
        self.pushButton__icon_mode.setAutoExclusive(True)
        self.pushButton__icon_mode.setFlat(True)
        self.pushButton__icon_mode.setObjectName("pushButton__icon_mode")
        self.horizontalLayout_2.addWidget(self.pushButton__icon_mode)
        self.pushButton__table_mode = QtWidgets.QPushButton(self.layoutWidget3)
        self.pushButton__table_mode.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__table_mode.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/main/icons/ic_format_list_numbered_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__table_mode.setIcon(icon7)
        self.pushButton__table_mode.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__table_mode.setCheckable(True)
        self.pushButton__table_mode.setAutoExclusive(True)
        self.pushButton__table_mode.setFlat(True)
        self.pushButton__table_mode.setObjectName("pushButton__table_mode")
        self.horizontalLayout_2.addWidget(self.pushButton__table_mode)
        self.verticalLayout_5.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setSpacing(5)
        self.horizontalLayout_4.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.comboBox__search_type = QtWidgets.QComboBox(self.layoutWidget3)
        self.comboBox__search_type.setCursor(QtCore.Qt.PointingHandCursor)
        self.comboBox__search_type.setFrame(False)
        self.comboBox__search_type.setObjectName("comboBox__search_type")
        self.horizontalLayout_4.addWidget(self.comboBox__search_type)
        self.checkBox__casesensitive_hda = QtWidgets.QCheckBox(self.layoutWidget3)
        self.checkBox__casesensitive_hda.setCursor(QtCore.Qt.PointingHandCursor)
        self.checkBox__casesensitive_hda.setText("")
        self.checkBox__casesensitive_hda.setIcon(icon1)
        self.checkBox__casesensitive_hda.setIconSize(QtCore.QSize(20, 20))
        self.checkBox__casesensitive_hda.setObjectName("checkBox__casesensitive_hda")
        self.horizontalLayout_4.addWidget(self.checkBox__casesensitive_hda)
        self.lineEdit__search_hda = QtWidgets.QLineEdit(self.layoutWidget3)
        self.lineEdit__search_hda.setFrame(False)
        self.lineEdit__search_hda.setClearButtonEnabled(True)
        self.lineEdit__search_hda.setObjectName("lineEdit__search_hda")
        self.horizontalLayout_4.addWidget(self.lineEdit__search_hda)
        self.verticalLayout_5.addLayout(self.horizontalLayout_4)
        self.stackedWidget__hda = QtWidgets.QStackedWidget(self.splitter__ihda_whole_vertical)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stackedWidget__hda.sizePolicy().hasHeightForWidth())
        self.stackedWidget__hda.setSizePolicy(sizePolicy)
        self.stackedWidget__hda.setObjectName("stackedWidget__hda")
        self.page__hda_list = QtWidgets.QWidget()
        self.page__hda_list.setObjectName("page__hda_list")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.page__hda_list)
        self.verticalLayout_8.setSpacing(1)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.verticalLayout__listview = QtWidgets.QVBoxLayout()
        self.verticalLayout__listview.setSpacing(1)
        self.verticalLayout__listview.setObjectName("verticalLayout__listview")
        self.verticalLayout_8.addLayout(self.verticalLayout__listview)
        self.stackedWidget__hda.addWidget(self.page__hda_list)
        self.page__hda_table = QtWidgets.QWidget()
        self.page__hda_table.setObjectName("page__hda_table")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.page__hda_table)
        self.verticalLayout_12.setSpacing(1)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.verticalLayout__tableview = QtWidgets.QVBoxLayout()
        self.verticalLayout__tableview.setSpacing(1)
        self.verticalLayout__tableview.setObjectName("verticalLayout__tableview")
        self.verticalLayout_12.addLayout(self.verticalLayout__tableview)
        self.stackedWidget__hda.addWidget(self.page__hda_table)
        self.verticalLayout_6.addWidget(self.splitter__ihda_whole_vertical)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setSpacing(1)
        self.horizontalLayout_9.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setSpacing(8)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label__tag_pixmap = QtWidgets.QLabel(self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label__tag_pixmap.sizePolicy().hasHeightForWidth())
        self.label__tag_pixmap.setSizePolicy(sizePolicy)
        self.label__tag_pixmap.setMaximumSize(QtCore.QSize(20, 20))
        self.label__tag_pixmap.setText("")
        self.label__tag_pixmap.setPixmap(QtGui.QPixmap(":/main/icons/ic_bookmark_white.png"))
        self.label__tag_pixmap.setScaledContents(True)
        self.label__tag_pixmap.setAlignment(QtCore.Qt.AlignCenter)
        self.label__tag_pixmap.setObjectName("label__tag_pixmap")
        self.horizontalLayout_8.addWidget(self.label__tag_pixmap)
        self.label__tags = QtWidgets.QLabel(self.layoutWidget2)
        self.label__tags.setText("")
        self.label__tags.setObjectName("label__tags")
        self.horizontalLayout_8.addWidget(self.label__tags)
        self.horizontalLayout_9.addLayout(self.horizontalLayout_8)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem2)
        self.label__logged_id_pixmap = QtWidgets.QLabel(self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label__logged_id_pixmap.sizePolicy().hasHeightForWidth())
        self.label__logged_id_pixmap.setSizePolicy(sizePolicy)
        self.label__logged_id_pixmap.setMaximumSize(QtCore.QSize(20, 20))
        self.label__logged_id_pixmap.setText("")
        self.label__logged_id_pixmap.setPixmap(QtGui.QPixmap(":/main/icons/ic_account_box_white.png"))
        self.label__logged_id_pixmap.setScaledContents(True)
        self.label__logged_id_pixmap.setAlignment(QtCore.Qt.AlignCenter)
        self.label__logged_id_pixmap.setObjectName("label__logged_id_pixmap")
        self.horizontalLayout_9.addWidget(self.label__logged_id_pixmap)
        self.label__logged_id = QtWidgets.QLabel(self.layoutWidget2)
        self.label__logged_id.setText("")
        self.label__logged_id.setAlignment(QtCore.Qt.AlignCenter)
        self.label__logged_id.setObjectName("label__logged_id")
        self.horizontalLayout_9.addWidget(self.label__logged_id)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem3)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setSpacing(3)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label__hda_count = QtWidgets.QLabel(self.layoutWidget2)
        self.label__hda_count.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label__hda_count.setObjectName("label__hda_count")
        self.horizontalLayout_7.addWidget(self.label__hda_count)
        self.label__hda_count_suffix = QtWidgets.QLabel(self.layoutWidget2)
        self.label__hda_count_suffix.setObjectName("label__hda_count_suffix")
        self.horizontalLayout_7.addWidget(self.label__hda_count_suffix)
        self.horizontalLayout_9.addLayout(self.horizontalLayout_7)
        self.verticalLayout_6.addLayout(self.horizontalLayout_9)
        self.splitter__hda_info_whole_vertical = QtWidgets.QSplitter(self.splitter__whole_horizontal)
        self.splitter__hda_info_whole_vertical.setOrientation(QtCore.Qt.Vertical)
        self.splitter__hda_info_whole_vertical.setHandleWidth(3)
        self.splitter__hda_info_whole_vertical.setObjectName("splitter__hda_info_whole_vertical")
        self.frame__hda_info = QtWidgets.QFrame(self.splitter__hda_info_whole_vertical)
        self.frame__hda_info.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame__hda_info.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame__hda_info.setObjectName("frame__hda_info")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.frame__hda_info)
        self.horizontalLayout_11.setSpacing(3)
        self.horizontalLayout_11.setContentsMargins(3, 1, 3, 1)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.pushButton__hda_info = QtWidgets.QPushButton(self.frame__hda_info)
        self.pushButton__hda_info.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__hda_info.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/main/icons/ic_border_color_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__hda_info.setIcon(icon8)
        self.pushButton__hda_info.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__hda_info.setCheckable(True)
        self.pushButton__hda_info.setChecked(True)
        self.pushButton__hda_info.setAutoExclusive(True)
        self.pushButton__hda_info.setFlat(True)
        self.pushButton__hda_info.setObjectName("pushButton__hda_info")
        self.horizontalLayout_11.addWidget(self.pushButton__hda_info)
        self.pushButton__hda_loc_record = QtWidgets.QPushButton(self.frame__hda_info)
        self.pushButton__hda_loc_record.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__hda_loc_record.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/main/icons/ic_place_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__hda_loc_record.setIcon(icon9)
        self.pushButton__hda_loc_record.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__hda_loc_record.setCheckable(True)
        self.pushButton__hda_loc_record.setAutoExclusive(True)
        self.pushButton__hda_loc_record.setFlat(True)
        self.pushButton__hda_loc_record.setObjectName("pushButton__hda_loc_record")
        self.horizontalLayout_11.addWidget(self.pushButton__hda_loc_record)
        self.pushButton__hda_inside_node_view = QtWidgets.QPushButton(self.frame__hda_info)
        self.pushButton__hda_inside_node_view.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__hda_inside_node_view.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/main/icons/ic_find_in_page_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__hda_inside_node_view.setIcon(icon10)
        self.pushButton__hda_inside_node_view.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__hda_inside_node_view.setCheckable(True)
        self.pushButton__hda_inside_node_view.setAutoExclusive(True)
        self.pushButton__hda_inside_node_view.setFlat(True)
        self.pushButton__hda_inside_node_view.setObjectName("pushButton__hda_inside_node_view")
        self.horizontalLayout_11.addWidget(self.pushButton__hda_inside_node_view)
        spacerItem4 = QtWidgets.QSpacerItem(133, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem4)
        self.pushButton__donate = QtWidgets.QPushButton(self.frame__hda_info)
        self.pushButton__donate.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__donate.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/main/icons/ic_sentiment_satisfied_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__donate.setIcon(icon11)
        self.pushButton__donate.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__donate.setFlat(True)
        self.pushButton__donate.setObjectName("pushButton__donate")
        self.horizontalLayout_11.addWidget(self.pushButton__donate)
        self.stackedWidget__hda_infos = QtWidgets.QStackedWidget(self.splitter__hda_info_whole_vertical)
        self.stackedWidget__hda_infos.setObjectName("stackedWidget__hda_infos")
        self.page__hda_info = QtWidgets.QWidget()
        self.page__hda_info.setObjectName("page__hda_info")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.page__hda_info)
        self.verticalLayout_3.setSpacing(1)
        self.verticalLayout_3.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.splitter__hda_info_vertical = QtWidgets.QSplitter(self.page__hda_info)
        self.splitter__hda_info_vertical.setOrientation(QtCore.Qt.Vertical)
        self.splitter__hda_info_vertical.setHandleWidth(3)
        self.splitter__hda_info_vertical.setObjectName("splitter__hda_info_vertical")
        self.layoutWidget4 = QtWidgets.QWidget(self.splitter__hda_info_vertical)
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget4)
        self.verticalLayout.setSpacing(1)
        self.verticalLayout.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textEdit__note = QtWidgets.QTextEdit(self.layoutWidget4)
        self.textEdit__note.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textEdit__note.setTabStopWidth(40)
        self.textEdit__note.setObjectName("textEdit__note")
        self.verticalLayout.addWidget(self.textEdit__note)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(3)
        self.horizontalLayout.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem5)
        self.pushButton__note_save = QtWidgets.QPushButton(self.layoutWidget4)
        self.pushButton__note_save.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__note_save.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/main/icons/ic_save_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__note_save.setIcon(icon12)
        self.pushButton__note_save.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__note_save.setFlat(True)
        self.pushButton__note_save.setObjectName("pushButton__note_save")
        self.horizontalLayout.addWidget(self.pushButton__note_save)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.layoutWidget5 = QtWidgets.QWidget(self.splitter__hda_info_vertical)
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget5)
        self.verticalLayout_2.setSpacing(1)
        self.verticalLayout_2.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.textEdit__tag = QtWidgets.QTextEdit(self.layoutWidget5)
        self.textEdit__tag.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textEdit__tag.setTabStopWidth(40)
        self.textEdit__tag.setObjectName("textEdit__tag")
        self.verticalLayout_2.addWidget(self.textEdit__tag)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setSpacing(3)
        self.horizontalLayout_6.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem6)
        self.pushButton__tag_save = QtWidgets.QPushButton(self.layoutWidget5)
        self.pushButton__tag_save.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__tag_save.setText("")
        self.pushButton__tag_save.setIcon(icon12)
        self.pushButton__tag_save.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__tag_save.setFlat(True)
        self.pushButton__tag_save.setObjectName("pushButton__tag_save")
        self.horizontalLayout_6.addWidget(self.pushButton__tag_save)
        self.verticalLayout_2.addLayout(self.horizontalLayout_6)
        self.verticalLayout_3.addWidget(self.splitter__hda_info_vertical)
        self.stackedWidget__hda_infos.addWidget(self.page__hda_info)
        self.page__hda_loc_record = QtWidgets.QWidget()
        self.page__hda_loc_record.setObjectName("page__hda_loc_record")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.page__hda_loc_record)
        self.verticalLayout_13.setSpacing(1)
        self.verticalLayout_13.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setSpacing(1)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setSpacing(5)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.lineEdit__search_record = QtWidgets.QLineEdit(self.page__hda_loc_record)
        self.lineEdit__search_record.setFrame(False)
        self.lineEdit__search_record.setClearButtonEnabled(True)
        self.lineEdit__search_record.setObjectName("lineEdit__search_record")
        self.horizontalLayout_5.addWidget(self.lineEdit__search_record)
        self.checkBox__record_only_current_ihda = QtWidgets.QCheckBox(self.page__hda_loc_record)
        self.checkBox__record_only_current_ihda.setCursor(QtCore.Qt.PointingHandCursor)
        self.checkBox__record_only_current_ihda.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/main/icons/show_all.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox__record_only_current_ihda.setIcon(icon13)
        self.checkBox__record_only_current_ihda.setIconSize(QtCore.QSize(20, 20))
        self.checkBox__record_only_current_ihda.setObjectName("checkBox__record_only_current_ihda")
        self.horizontalLayout_5.addWidget(self.checkBox__record_only_current_ihda)
        self.checkBox__record_only_current_hipfile = QtWidgets.QCheckBox(self.page__hda_loc_record)
        self.checkBox__record_only_current_hipfile.setCursor(QtCore.Qt.PointingHandCursor)
        self.checkBox__record_only_current_hipfile.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/main/icons/hipfile.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox__record_only_current_hipfile.setIcon(icon14)
        self.checkBox__record_only_current_hipfile.setIconSize(QtCore.QSize(20, 20))
        self.checkBox__record_only_current_hipfile.setObjectName("checkBox__record_only_current_hipfile")
        self.horizontalLayout_5.addWidget(self.checkBox__record_only_current_hipfile)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem7)
        self.pushButton__cleanup_hda_record = QtWidgets.QPushButton(self.page__hda_loc_record)
        self.pushButton__cleanup_hda_record.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__cleanup_hda_record.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/main/icons/clear.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__cleanup_hda_record.setIcon(icon15)
        self.pushButton__cleanup_hda_record.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__cleanup_hda_record.setFlat(True)
        self.pushButton__cleanup_hda_record.setObjectName("pushButton__cleanup_hda_record")
        self.horizontalLayout_5.addWidget(self.pushButton__cleanup_hda_record)
        self.verticalLayout_9.addLayout(self.horizontalLayout_5)
        self.verticalLayout__hda_loc_record = QtWidgets.QVBoxLayout()
        self.verticalLayout__hda_loc_record.setSpacing(1)
        self.verticalLayout__hda_loc_record.setObjectName("verticalLayout__hda_loc_record")
        self.verticalLayout_9.addLayout(self.verticalLayout__hda_loc_record)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setSpacing(5)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_13.addItem(spacerItem8)
        self.label__loc_record_count = QtWidgets.QLabel(self.page__hda_loc_record)
        self.label__loc_record_count.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label__loc_record_count.setObjectName("label__loc_record_count")
        self.horizontalLayout_13.addWidget(self.label__loc_record_count)
        self.label__loc_record_count_suffix = QtWidgets.QLabel(self.page__hda_loc_record)
        self.label__loc_record_count_suffix.setObjectName("label__loc_record_count_suffix")
        self.horizontalLayout_13.addWidget(self.label__loc_record_count_suffix)
        self.verticalLayout_9.addLayout(self.horizontalLayout_13)
        self.verticalLayout_13.addLayout(self.verticalLayout_9)
        self.stackedWidget__hda_infos.addWidget(self.page__hda_loc_record)
        self.page__hda_inside_hipfile = QtWidgets.QWidget()
        self.page__hda_inside_hipfile.setObjectName("page__hda_inside_hipfile")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.page__hda_inside_hipfile)
        self.verticalLayout_21.setSpacing(1)
        self.verticalLayout_21.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout()
        self.verticalLayout_20.setSpacing(1)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setSpacing(3)
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.checkBox__hda_inside_connect_to_view = QtWidgets.QCheckBox(self.page__hda_inside_hipfile)
        self.checkBox__hda_inside_connect_to_view.setCursor(QtCore.Qt.PointingHandCursor)
        self.checkBox__hda_inside_connect_to_view.setText("")
        self.checkBox__hda_inside_connect_to_view.setIcon(icon13)
        self.checkBox__hda_inside_connect_to_view.setIconSize(QtCore.QSize(20, 20))
        self.checkBox__hda_inside_connect_to_view.setObjectName("checkBox__hda_inside_connect_to_view")
        self.horizontalLayout_20.addWidget(self.checkBox__hda_inside_connect_to_view)
        self.comboBox__hda_inside_node = QtWidgets.QComboBox(self.page__hda_inside_hipfile)
        self.comboBox__hda_inside_node.setCursor(QtCore.Qt.PointingHandCursor)
        self.comboBox__hda_inside_node.setFrame(False)
        self.comboBox__hda_inside_node.setObjectName("comboBox__hda_inside_node")
        self.horizontalLayout_20.addWidget(self.comboBox__hda_inside_node)
        self.lineEdit__search_found_hda_inside_node = QtWidgets.QLineEdit(self.page__hda_inside_hipfile)
        self.lineEdit__search_found_hda_inside_node.setFrame(False)
        self.lineEdit__search_found_hda_inside_node.setClearButtonEnabled(True)
        self.lineEdit__search_found_hda_inside_node.setObjectName("lineEdit__search_found_hda_inside_node")
        self.horizontalLayout_20.addWidget(self.lineEdit__search_found_hda_inside_node)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem9)
        self.pushButton__hda_inside_node_refresh = QtWidgets.QPushButton(self.page__hda_inside_hipfile)
        self.pushButton__hda_inside_node_refresh.setCursor(QtCore.Qt.PointingHandCursor)
        self.pushButton__hda_inside_node_refresh.setText("")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/main/icons/ic_refresh_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton__hda_inside_node_refresh.setIcon(icon16)
        self.pushButton__hda_inside_node_refresh.setIconSize(QtCore.QSize(20, 20))
        self.pushButton__hda_inside_node_refresh.setFlat(True)
        self.pushButton__hda_inside_node_refresh.setObjectName("pushButton__hda_inside_node_refresh")
        self.horizontalLayout_20.addWidget(self.pushButton__hda_inside_node_refresh)
        self.verticalLayout_20.addLayout(self.horizontalLayout_20)
        self.verticalLayout__hda_inside_node = QtWidgets.QVBoxLayout()
        self.verticalLayout__hda_inside_node.setSpacing(1)
        self.verticalLayout__hda_inside_node.setObjectName("verticalLayout__hda_inside_node")
        self.verticalLayout_20.addLayout(self.verticalLayout__hda_inside_node)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setSpacing(3)
        self.horizontalLayout_19.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_19.addItem(spacerItem10)
        self.label__found_hda_inside_hipfile = QtWidgets.QLabel(self.page__hda_inside_hipfile)
        self.label__found_hda_inside_hipfile.setObjectName("label__found_hda_inside_hipfile")
        self.horizontalLayout_19.addWidget(self.label__found_hda_inside_hipfile)
        self.label__found_hda_inside_hipfile_count = QtWidgets.QLabel(self.page__hda_inside_hipfile)
        self.label__found_hda_inside_hipfile_count.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label__found_hda_inside_hipfile_count.setObjectName("label__found_hda_inside_hipfile_count")
        self.horizontalLayout_19.addWidget(self.label__found_hda_inside_hipfile_count)
        self.verticalLayout_20.addLayout(self.horizontalLayout_19)
        self.verticalLayout_21.addLayout(self.verticalLayout_20)
        self.stackedWidget__hda_infos.addWidget(self.page__hda_inside_hipfile)
        self.verticalLayout_15.addWidget(self.splitter__whole_horizontal)
        self.stackedWidget__whole.addWidget(self.page__ihda)
        self.page__video_player = QtWidgets.QWidget()
        self.page__video_player.setObjectName("page__video_player")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.page__video_player)
        self.verticalLayout_10.setSpacing(1)
        self.verticalLayout_10.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.verticalLayout__video_player = QtWidgets.QVBoxLayout()
        self.verticalLayout__video_player.setSpacing(1)
        self.verticalLayout__video_player.setObjectName("verticalLayout__video_player")
        self.verticalLayout_10.addLayout(self.verticalLayout__video_player)
        self.stackedWidget__whole.addWidget(self.page__video_player)
        self.page__web_view = QtWidgets.QWidget()
        self.page__web_view.setObjectName("page__web_view")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.page__web_view)
        self.verticalLayout_11.setSpacing(1)
        self.verticalLayout_11.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.verticalLayout__web_view = QtWidgets.QVBoxLayout()
        self.verticalLayout__web_view.setSpacing(1)
        self.verticalLayout__web_view.setObjectName("verticalLayout__web_view")
        self.verticalLayout_11.addLayout(self.verticalLayout__web_view)
        self.stackedWidget__whole.addWidget(self.page__web_view)
        self.page__history = QtWidgets.QWidget()
        self.page__history.setObjectName("page__history")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.page__history)
        self.verticalLayout_17.setSpacing(1)
        self.verticalLayout_17.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setSpacing(1)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.splitter__ihda_hist_whole_vertical = QtWidgets.QSplitter(self.page__history)
        self.splitter__ihda_hist_whole_vertical.setOrientation(QtCore.Qt.Vertical)
        self.splitter__ihda_hist_whole_vertical.setHandleWidth(3)
        self.splitter__ihda_hist_whole_vertical.setObjectName("splitter__ihda_hist_whole_vertical")
        self.layoutWidget6 = QtWidgets.QWidget(self.splitter__ihda_hist_whole_vertical)
        self.layoutWidget6.setObjectName("layoutWidget6")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.layoutWidget6)
        self.horizontalLayout_18.setSpacing(5)
        self.horizontalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.comboBox__hist_ihda_node = QtWidgets.QComboBox(self.layoutWidget6)
        self.comboBox__hist_ihda_node.setCursor(QtCore.Qt.PointingHandCursor)
        self.comboBox__hist_ihda_node.setFrame(False)
        self.comboBox__hist_ihda_node.setObjectName("comboBox__hist_ihda_node")
        self.horizontalLayout_18.addWidget(self.comboBox__hist_ihda_node)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem11)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setSpacing(5)
        self.horizontalLayout_10.setContentsMargins(3, -1, 3, -1)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.comboBox__search_field_hist = QtWidgets.QComboBox(self.layoutWidget6)
        self.comboBox__search_field_hist.setCursor(QtCore.Qt.PointingHandCursor)
        self.comboBox__search_field_hist.setFrame(False)
        self.comboBox__search_field_hist.setObjectName("comboBox__search_field_hist")
        self.horizontalLayout_10.addWidget(self.comboBox__search_field_hist)
        self.checkBox__casesensitive_hda_hist = QtWidgets.QCheckBox(self.layoutWidget6)
        self.checkBox__casesensitive_hda_hist.setCursor(QtCore.Qt.PointingHandCursor)
        self.checkBox__casesensitive_hda_hist.setText("")
        self.checkBox__casesensitive_hda_hist.setIcon(icon1)
        self.checkBox__casesensitive_hda_hist.setIconSize(QtCore.QSize(20, 20))
        self.checkBox__casesensitive_hda_hist.setObjectName("checkBox__casesensitive_hda_hist")
        self.horizontalLayout_10.addWidget(self.checkBox__casesensitive_hda_hist)
        self.lineEdit__search_hda_hist = QtWidgets.QLineEdit(self.layoutWidget6)
        self.lineEdit__search_hda_hist.setFrame(False)
        self.lineEdit__search_hda_hist.setClearButtonEnabled(True)
        self.lineEdit__search_hda_hist.setObjectName("lineEdit__search_hda_hist")
        self.horizontalLayout_10.addWidget(self.lineEdit__search_hda_hist)
        self.horizontalLayout_18.addLayout(self.horizontalLayout_10)
        spacerItem12 = QtWidgets.QSpacerItem(24, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem12)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.checkBox__hist_search_date = QtWidgets.QCheckBox(self.layoutWidget6)
        self.checkBox__hist_search_date.setCursor(QtCore.Qt.PointingHandCursor)
        self.checkBox__hist_search_date.setObjectName("checkBox__hist_search_date")
        self.horizontalLayout_15.addWidget(self.checkBox__hist_search_date)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.dateEdit__hist_search_start = QtWidgets.QDateEdit(self.layoutWidget6)
        self.dateEdit__hist_search_start.setFrame(False)
        self.dateEdit__hist_search_start.setAlignment(QtCore.Qt.AlignCenter)
        self.dateEdit__hist_search_start.setCalendarPopup(True)
        self.dateEdit__hist_search_start.setDate(QtCore.QDate(2020, 1, 1))
        self.dateEdit__hist_search_start.setObjectName("dateEdit__hist_search_start")
        self.horizontalLayout_14.addWidget(self.dateEdit__hist_search_start)
        self.label__join_str = QtWidgets.QLabel(self.layoutWidget6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label__join_str.sizePolicy().hasHeightForWidth())
        self.label__join_str.setSizePolicy(sizePolicy)
        self.label__join_str.setAlignment(QtCore.Qt.AlignCenter)
        self.label__join_str.setObjectName("label__join_str")
        self.horizontalLayout_14.addWidget(self.label__join_str)
        self.dateEdit__hist_search_end = QtWidgets.QDateEdit(self.layoutWidget6)
        self.dateEdit__hist_search_end.setFrame(False)
        self.dateEdit__hist_search_end.setAlignment(QtCore.Qt.AlignCenter)
        self.dateEdit__hist_search_end.setCalendarPopup(True)
        self.dateEdit__hist_search_end.setDate(QtCore.QDate(2020, 12, 31))
        self.dateEdit__hist_search_end.setObjectName("dateEdit__hist_search_end")
        self.horizontalLayout_14.addWidget(self.dateEdit__hist_search_end)
        self.horizontalLayout_15.addLayout(self.horizontalLayout_14)
        self.horizontalLayout_18.addLayout(self.horizontalLayout_15)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem13)
        self.layoutWidget7 = QtWidgets.QWidget(self.splitter__ihda_hist_whole_vertical)
        self.layoutWidget7.setObjectName("layoutWidget7")
        self.verticalLayout__history = QtWidgets.QVBoxLayout(self.layoutWidget7)
        self.verticalLayout__history.setSpacing(1)
        self.verticalLayout__history.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout__history.setObjectName("verticalLayout__history")
        self.verticalLayout_7.addWidget(self.splitter__ihda_hist_whole_vertical)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setSpacing(5)
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.label__hist_tag_pixmap = QtWidgets.QLabel(self.page__history)
        self.label__hist_tag_pixmap.setMaximumSize(QtCore.QSize(20, 20))
        self.label__hist_tag_pixmap.setText("")
        self.label__hist_tag_pixmap.setPixmap(QtGui.QPixmap(":/main/icons/ic_bookmark_white_18dp.png"))
        self.label__hist_tag_pixmap.setScaledContents(True)
        self.label__hist_tag_pixmap.setAlignment(QtCore.Qt.AlignCenter)
        self.label__hist_tag_pixmap.setObjectName("label__hist_tag_pixmap")
        self.horizontalLayout_17.addWidget(self.label__hist_tag_pixmap)
        self.label__hist_tags = QtWidgets.QLabel(self.page__history)
        self.label__hist_tags.setText("")
        self.label__hist_tags.setObjectName("label__hist_tags")
        self.horizontalLayout_17.addWidget(self.label__hist_tags)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem14)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setSpacing(5)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.label__hist_cnt = QtWidgets.QLabel(self.page__history)
        self.label__hist_cnt.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label__hist_cnt.setObjectName("label__hist_cnt")
        self.horizontalLayout_16.addWidget(self.label__hist_cnt)
        self.label__hist_cnt_suffix = QtWidgets.QLabel(self.page__history)
        self.label__hist_cnt_suffix.setObjectName("label__hist_cnt_suffix")
        self.horizontalLayout_16.addWidget(self.label__hist_cnt_suffix)
        self.horizontalLayout_17.addLayout(self.horizontalLayout_16)
        self.verticalLayout_7.addLayout(self.horizontalLayout_17)
        self.verticalLayout_17.addLayout(self.verticalLayout_7)
        self.stackedWidget__whole.addWidget(self.page__history)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.splitter__whole_vertical)
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout_14.setSpacing(1)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.textBrowser__debug = QtWidgets.QTextBrowser(self.verticalLayoutWidget)
        self.textBrowser__debug.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textBrowser__debug.setTabStopWidth(40)
        self.textBrowser__debug.setOpenExternalLinks(True)
        self.textBrowser__debug.setObjectName("textBrowser__debug")
        self.verticalLayout_14.addWidget(self.textBrowser__debug)
        self.verticalLayout_18.addWidget(self.splitter__whole_vertical)
        MainWindow__individualHDA.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow__individualHDA)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1472, 31))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuDatabase = QtWidgets.QMenu(self.menuFile)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/main/icons/database.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuDatabase.setIcon(icon17)
        self.menuDatabase.setObjectName("menuDatabase")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuConfig = QtWidgets.QMenu(self.menuTools)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/main/icons/ic_settings_applications_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuConfig.setIcon(icon18)
        self.menuConfig.setObjectName("menuConfig")
        self.menuTheme = QtWidgets.QMenu(self.menuConfig)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/main/icons/ic_palette_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuTheme.setIcon(icon19)
        self.menuTheme.setObjectName("menuTheme")
        self.menuDownload = QtWidgets.QMenu(self.menuTools)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/main/icons/ic_language_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuDownload.setIcon(icon20)
        self.menuDownload.setObjectName("menuDownload")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuData = QtWidgets.QMenu(self.menubar)
        self.menuData.setObjectName("menuData")
        self.menuHistory = QtWidgets.QMenu(self.menuData)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/main/icons/ic_query_builder_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuHistory.setIcon(icon21)
        self.menuHistory.setObjectName("menuHistory")
        MainWindow__individualHDA.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow__individualHDA)
        self.statusbar.setObjectName("statusbar")
        MainWindow__individualHDA.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow__individualHDA)
        self.toolBar.setIconSize(QtCore.QSize(18, 18))
        self.toolBar.setObjectName("toolBar")
        MainWindow__individualHDA.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionQuit = QtWidgets.QAction(MainWindow__individualHDA)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/main/icons/ic_not_interested_white_48dp.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuit.setIcon(icon22)
        self.actionQuit.setObjectName("actionQuit")
        self.actionHelp = QtWidgets.QAction(MainWindow__individualHDA)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/main/icons/ic_help_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHelp.setIcon(icon23)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAbout = QtWidgets.QAction(MainWindow__individualHDA)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/main/icons/ic_info_outline_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon24)
        self.actionAbout.setObjectName("actionAbout")
        self.actionReset = QtWidgets.QAction(MainWindow__individualHDA)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/main/icons/ic_restore_page_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReset.setIcon(icon25)
        self.actionReset.setObjectName("actionReset")
        self.actionDefault = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionDefault.setCheckable(True)
        self.actionDefault.setChecked(True)
        self.actionDefault.setObjectName("actionDefault")
        self.actionDark_blue = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionDark_blue.setCheckable(True)
        self.actionDark_blue.setObjectName("actionDark_blue")
        self.actionOpen_the_hda_directory = QtWidgets.QAction(MainWindow__individualHDA)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/main/icons/ic_folder_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_the_hda_directory.setIcon(icon26)
        self.actionOpen_the_hda_directory.setObjectName("actionOpen_the_hda_directory")
        self.actionLogin = QtWidgets.QAction(MainWindow__individualHDA)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/main/icons/ic_account_box_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLogin.setIcon(icon27)
        self.actionLogin.setObjectName("actionLogin")
        self.actionLogout = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionLogout.setIcon(icon27)
        self.actionLogout.setObjectName("actionLogout")
        self.actionSubmit_a_Bug_Report = QtWidgets.QAction(MainWindow__individualHDA)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/main/icons/ic_email_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSubmit_a_Bug_Report.setIcon(icon28)
        self.actionSubmit_a_Bug_Report.setObjectName("actionSubmit_a_Bug_Report")
        self.actionSubmit_Feedback = QtWidgets.QAction(MainWindow__individualHDA)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/main/icons/ic_send_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSubmit_Feedback.setIcon(icon29)
        self.actionSubmit_Feedback.setObjectName("actionSubmit_Feedback")
        self.actioniHDA = QtWidgets.QAction(MainWindow__individualHDA)
        self.actioniHDA.setCheckable(True)
        self.actioniHDA.setChecked(True)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/main/icons/houdini_logo_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actioniHDA.setIcon(icon30)
        self.actioniHDA.setObjectName("actioniHDA")
        self.actionVideo_Player = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionVideo_Player.setCheckable(True)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/main/icons/ic_movie_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionVideo_Player.setIcon(icon31)
        self.actionVideo_Player.setObjectName("actionVideo_Player")
        self.actionWeb = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionWeb.setCheckable(True)
        self.actionWeb.setIcon(icon20)
        self.actionWeb.setObjectName("actionWeb")
        self.actionCreate_Account = QtWidgets.QAction(MainWindow__individualHDA)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/main/icons/ic_group_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreate_Account.setIcon(icon32)
        self.actionCreate_Account.setObjectName("actionCreate_Account")
        self.actionPreference = QtWidgets.QAction(MainWindow__individualHDA)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/main/icons/ic_build_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreference.setIcon(icon33)
        self.actionPreference.setObjectName("actionPreference")
        self.actionImport_Data = QtWidgets.QAction(MainWindow__individualHDA)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/main/icons/ic_unarchive_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport_Data.setIcon(icon34)
        self.actionImport_Data.setObjectName("actionImport_Data")
        self.actionExport_Data = QtWidgets.QAction(MainWindow__individualHDA)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/main/icons/ic_archive_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_Data.setIcon(icon35)
        self.actionExport_Data.setObjectName("actionExport_Data")
        self.actionDownload_FFmpeg = QtWidgets.QAction(MainWindow__individualHDA)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/main/icons/ic_language_white_48dp.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDownload_FFmpeg.setIcon(icon36)
        self.actionDownload_FFmpeg.setObjectName("actionDownload_FFmpeg")
        self.actionHistory = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionHistory.setCheckable(True)
        self.actionHistory.setIcon(icon21)
        self.actionHistory.setObjectName("actionHistory")
        self.actionUpdate = QtWidgets.QAction(MainWindow__individualHDA)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/main/icons/ic_new_releases_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUpdate.setIcon(icon37)
        self.actionUpdate.setObjectName("actionUpdate")
        self.actionFFmpeg = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionFFmpeg.setObjectName("actionFFmpeg")
        self.actionCodec = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionCodec.setObjectName("actionCodec")
        self.actionDelete_All = QtWidgets.QAction(MainWindow__individualHDA)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/main/icons/ic_delete_forever_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_All.setIcon(icon38)
        self.actionDelete_All.setObjectName("actionDelete_All")
        self.actionUnpack_Subnet = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionUnpack_Subnet.setCheckable(True)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/main/icons/unpack_subnet.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUnpack_Subnet.setIcon(icon39)
        self.actionUnpack_Subnet.setObjectName("actionUnpack_Subnet")
        self.actionSticky_Note = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionSticky_Note.setCheckable(True)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/main/icons/network_sticky.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSticky_Note.setIcon(icon40)
        self.actionSticky_Note.setObjectName("actionSticky_Note")
        self.actionComment = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionComment.setCheckable(True)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/main/icons/ic_comment_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionComment.setIcon(icon41)
        self.actionComment.setObjectName("actionComment")
        self.actionNode_Synchronization = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionNode_Synchronization.setCheckable(True)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/main/icons/ic_swap_vert_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNode_Synchronization.setIcon(icon42)
        self.actionNode_Synchronization.setObjectName("actionNode_Synchronization")
        self.actionNull = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionNull.setCheckable(True)
        self.actionNull.setChecked(True)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/main/icons/ic_clear_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNull.setIcon(icon43)
        self.actionNull.setObjectName("actionNull")
        self.actionInput = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionInput.setCheckable(True)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/main/icons/ic_vertical_align_bottom_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInput.setIcon(icon44)
        self.actionInput.setObjectName("actionInput")
        self.actionOuput = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionOuput.setCheckable(True)
        icon45 = QtGui.QIcon()
        icon45.addPixmap(QtGui.QPixmap(":/main/icons/ic_vertical_align_top_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOuput.setIcon(icon45)
        self.actionOuput.setObjectName("actionOuput")
        self.actionBoth = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionBoth.setCheckable(True)
        icon46 = QtGui.QIcon()
        icon46.addPixmap(QtGui.QPixmap(":/main/icons/ic_vertical_align_center_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBoth.setIcon(icon46)
        self.actionBoth.setObjectName("actionBoth")
        self.actionCategory_Synchronization = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionCategory_Synchronization.setCheckable(True)
        icon47 = QtGui.QIcon()
        icon47.addPixmap(QtGui.QPixmap(":/main/icons/ic_swap_horiz_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCategory_Synchronization.setIcon(icon47)
        self.actionCategory_Synchronization.setObjectName("actionCategory_Synchronization")
        self.actionCleanup = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionCleanup.setIcon(icon15)
        self.actionCleanup.setObjectName("actionCleanup")
        self.actionAutomatic_Name_Change = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionAutomatic_Name_Change.setCheckable(True)
        self.actionAutomatic_Name_Change.setChecked(True)
        icon48 = QtGui.QIcon()
        icon48.addPixmap(QtGui.QPixmap(":/main/icons/ic_text_format_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAutomatic_Name_Change.setIcon(icon48)
        self.actionAutomatic_Name_Change.setObjectName("actionAutomatic_Name_Change")
        self.actionSystem_Info = QtWidgets.QAction(MainWindow__individualHDA)
        icon49 = QtGui.QIcon()
        icon49.addPixmap(QtGui.QPixmap(":/main/icons/ic_fingerprint_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSystem_Info.setIcon(icon49)
        self.actionSystem_Info.setObjectName("actionSystem_Info")
        self.actionLicense_Registration = QtWidgets.QAction(MainWindow__individualHDA)
        icon50 = QtGui.QIcon()
        icon50.addPixmap(QtGui.QPixmap(":/main/icons/ic_chrome_reader_mode_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLicense_Registration.setIcon(icon50)
        self.actionLicense_Registration.setObjectName("actionLicense_Registration")
        self.actionDonate = QtWidgets.QAction(MainWindow__individualHDA)
        self.actionDonate.setIcon(icon11)
        self.actionDonate.setObjectName("actionDonate")
        self.menuDatabase.addAction(self.actionCleanup)
        self.menuFile.addAction(self.actionCreate_Account)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLogin)
        self.menuFile.addAction(self.actionLogout)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuDatabase.menuAction())
        self.menuFile.addSeparator()
        self.menuTheme.addAction(self.actionDefault)
        self.menuTheme.addAction(self.actionDark_blue)
        self.menuConfig.addAction(self.menuTheme.menuAction())
        self.menuConfig.addSeparator()
        self.menuConfig.addAction(self.actionReset)
        self.menuDownload.addAction(self.actionFFmpeg)
        self.menuDownload.addAction(self.actionCodec)
        self.menuTools.addAction(self.menuConfig.menuAction())
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionPreference)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.menuDownload.menuAction())
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionSubmit_a_Bug_Report)
        self.menuHelp.addAction(self.actionSubmit_Feedback)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionUpdate)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionDonate)
        self.menuHistory.addAction(self.actionDelete_All)
        self.menuData.addAction(self.actionImport_Data)
        self.menuData.addAction(self.actionExport_Data)
        self.menuData.addSeparator()
        self.menuData.addAction(self.menuHistory.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionOpen_the_hda_directory)
        self.toolBar.addSeparator()
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actioniHDA)
        self.toolBar.addAction(self.actionHistory)
        self.toolBar.addAction(self.actionVideo_Player)
        self.toolBar.addAction(self.actionWeb)
        self.toolBar.addSeparator()
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCategory_Synchronization)
        self.toolBar.addAction(self.actionNode_Synchronization)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionUnpack_Subnet)
        self.toolBar.addAction(self.actionSticky_Note)
        self.toolBar.addAction(self.actionComment)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionNull)
        self.toolBar.addAction(self.actionInput)
        self.toolBar.addAction(self.actionOuput)
        self.toolBar.addAction(self.actionBoth)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAutomatic_Name_Change)

        self.retranslateUi(MainWindow__individualHDA)
        self.stackedWidget__whole.setCurrentIndex(0)
        self.stackedWidget__category.setCurrentIndex(0)
        self.stackedWidget__hda.setCurrentIndex(0)
        self.stackedWidget__hda_infos.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow__individualHDA)

    def retranslateUi(self, MainWindow__individualHDA):
        MainWindow__individualHDA.setWindowTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Individual HDA", None, -1))
        self.checkBox__casesensitive_cate.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Word Case Sensitive", None, -1))
        self.checkBox__casesensitive_cate.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "It is case sensitive", None, -1))
        self.lineEdit__search_cate.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Please enter your search term", None, -1))
        self.lineEdit__search_cate.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "ex) sop", None, -1))
        self.stackedWidget__category.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show the category of the iHDA", None, -1))
        self.label__cate_count.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "0", None, -1))
        self.label__cate_count_suffix.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "categories", None, -1))
        self.pushButton__favorite_node.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Shows Favorite Nodes", None, -1))
        self.pushButton__favorite_node.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Shows the node where the favorites are active", None, -1))
        self.pushButton__thumbnail.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Shows Thumbnails iHDA", None, -1))
        self.pushButton__thumbnail.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Shows thumbnails of iHDA nodes", None, -1))
        self.pushButton__zoomin.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Zoom In", None, -1))
        self.pushButton__zoomin.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Zoom in to the HDA\'s icon", None, -1))
        self.pushButton__zoomout.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Zoom Out", None, -1))
        self.pushButton__zoomout.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Zoom out to the HDA\'s icon", None, -1))
        self.doubleSpinBox__zoom.setSuffix(QtWidgets.QApplication.translate("MainWindow__individualHDA", "%", None, -1))
        self.pushButton__icon_mode.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Icon View", None, -1))
        self.pushButton__icon_mode.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Displays only the icon and name of the HDA", None, -1))
        self.pushButton__table_mode.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Table View", None, -1))
        self.pushButton__table_mode.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Display various information of HDA", None, -1))
        self.comboBox__search_type.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Search Type", None, -1))
        self.comboBox__search_type.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Decide what type to search for", None, -1))
        self.checkBox__casesensitive_hda.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Word Case Sensitive", None, -1))
        self.checkBox__casesensitive_hda.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "It is case sensitive", None, -1))
        self.lineEdit__search_hda.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Please enter your search term", None, -1))
        self.lineEdit__search_hda.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "ex) create_velocity", None, -1))
        self.page__hda_list.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Icon show iHDA nodes.", None, -1))
        self.page__hda_table.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Table show iHDA nodes.", None, -1))
        self.label__logged_id.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Logged ID", None, -1))
        self.label__logged_id.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Displays the logged-in ID", None, -1))
        self.label__hda_count.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "0", None, -1))
        self.label__hda_count_suffix.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "iHDA(s)", None, -1))
        self.pushButton__hda_info.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "iHDA Info View", None, -1))
        self.pushButton__hda_info.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "iHDA notes and tag information.", None, -1))
        self.pushButton__hda_loc_record.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "iHDA Location Record View", None, -1))
        self.pushButton__hda_loc_record.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Record iHDA location of current HIP file.", None, -1))
        self.pushButton__hda_inside_node_view.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "iHDA Inside Node View", None, -1))
        self.pushButton__hda_inside_node_view.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Find the iHDA node in the current HIP file.", None, -1))
        self.pushButton__donate.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Donate...", None, -1))
        self.pushButton__donate.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Donate. I need your help to make a better program.", None, -1))
        self.textEdit__note.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Please enter a note for that HDA", None, -1))
        self.textEdit__note.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "This is a note to write the selected iHDA.", None, -1))
        self.pushButton__note_save.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Save Note", None, -1))
        self.pushButton__note_save.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Save the text entered in the selected iHDA node", None, -1))
        self.textEdit__tag.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Please enter a tag for that HDA", None, -1))
        self.textEdit__tag.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "ex) #basic #explosion #smoke <Separated by #>", None, -1))
        self.pushButton__tag_save.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Save Tag", None, -1))
        self.pushButton__tag_save.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Save the tag you entered in the selected iHDA node", None, -1))
        self.lineEdit__search_record.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Please enter your search term", None, -1))
        self.lineEdit__search_record.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "ex) untitled.hip", None, -1))
        self.checkBox__record_only_current_ihda.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show Only Current iHDA", None, -1))
        self.checkBox__record_only_current_ihda.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "When selected, displays information only from the current iHDA node.", None, -1))
        self.checkBox__record_only_current_hipfile.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show Only Current HIP File", None, -1))
        self.checkBox__record_only_current_hipfile.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "When checked, only information from the current HIP file is displayed.", None, -1))
        self.pushButton__cleanup_hda_record.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Remove any unnecessary iHDA Record data that does not exist.", None, -1))
        self.pushButton__cleanup_hda_record.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Remove any unnecessary iHDA Record data that does not exist.", None, -1))
        self.label__loc_record_count.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "0", None, -1))
        self.label__loc_record_count_suffix.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "records", None, -1))
        self.checkBox__hda_inside_connect_to_view.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Connect to List/Table View", None, -1))
        self.checkBox__hda_inside_connect_to_view.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "When you enable this option, when you select an iHDA node in the List/Table view, only the information for that node is automatically displayed.", None, -1))
        self.comboBox__hda_inside_node.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Select which iHDA node to search.", None, -1))
        self.comboBox__hda_inside_node.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "The selected iHDA node is retrieved from the current HIP file.", None, -1))
        self.lineEdit__search_found_hda_inside_node.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Please enter your search term", None, -1))
        self.lineEdit__search_found_hda_inside_node.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "ex) setup_fire", None, -1))
        self.pushButton__hda_inside_node_refresh.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Refresh the iHDA node search results in the current HIP file.", None, -1))
        self.pushButton__hda_inside_node_refresh.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "If the search results do not match the iHDA node in the current HIP file, click this button to refresh.", None, -1))
        self.label__found_hda_inside_hipfile.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "found iHDA of ", None, -1))
        self.label__found_hda_inside_hipfile_count.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "0", None, -1))
        self.comboBox__hist_ihda_node.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Select iHDA node", None, -1))
        self.comboBox__hist_ihda_node.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "It shows the history of the selected iHDA node.", None, -1))
        self.comboBox__search_field_hist.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Search Type", None, -1))
        self.comboBox__search_field_hist.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Decide what type to search for", None, -1))
        self.checkBox__casesensitive_hda_hist.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Word Case Sensitive", None, -1))
        self.checkBox__casesensitive_hda_hist.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "It is case sensitive", None, -1))
        self.lineEdit__search_hda_hist.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Please enter your search term", None, -1))
        self.lineEdit__search_hda_hist.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "ex) wrangle", None, -1))
        self.checkBox__hist_search_date.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Search History By Date", None, -1))
        self.checkBox__hist_search_date.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Search iHDA history by date", None, -1))
        self.checkBox__hist_search_date.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Date Search", None, -1))
        self.dateEdit__hist_search_start.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Start Date", None, -1))
        self.dateEdit__hist_search_start.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Start date to search", None, -1))
        self.label__join_str.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "~", None, -1))
        self.dateEdit__hist_search_end.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "End Date", None, -1))
        self.dateEdit__hist_search_end.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "End date to search", None, -1))
        self.label__hist_cnt.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "0", None, -1))
        self.label__hist_cnt_suffix.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "histories", None, -1))
        self.textBrowser__debug.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show debug of application", None, -1))
        self.menuFile.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "File", None, -1))
        self.menuDatabase.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Database", None, -1))
        self.menuTools.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Tools", None, -1))
        self.menuConfig.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Config", None, -1))
        self.menuTheme.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Theme", None, -1))
        self.menuDownload.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Download", None, -1))
        self.menuHelp.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Help", None, -1))
        self.menuData.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Data", None, -1))
        self.menuHistory.setTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "History", None, -1))
        self.toolBar.setWindowTitle(QtWidgets.QApplication.translate("MainWindow__individualHDA", "toolBar", None, -1))
        self.actionQuit.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Quit", None, -1))
        self.actionHelp.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Help", None, -1))
        self.actionAbout.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "About", None, -1))
        self.actionReset.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Reset", None, -1))
        self.actionReset.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Initialize the property", None, -1))
        self.actionDefault.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Default", None, -1))
        self.actionDefault.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Change to the default theme", None, -1))
        self.actionDark_blue.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Dark blue", None, -1))
        self.actionDark_blue.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Change to the dark blue", None, -1))
        self.actionOpen_the_hda_directory.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Open the HDA directory...", None, -1))
        self.actionOpen_the_hda_directory.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Open the HDA directory path.", None, -1))
        self.actionLogin.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Login", None, -1))
        self.actionLogout.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Logout", None, -1))
        self.actionSubmit_a_Bug_Report.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Submit a Bug Report", None, -1))
        self.actionSubmit_Feedback.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Submit Feedback", None, -1))
        self.actioniHDA.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "iHDA", None, -1))
        self.actioniHDA.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show iHDA window.", None, -1))
        self.actionVideo_Player.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Video Player", None, -1))
        self.actionVideo_Player.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show video player window.", None, -1))
        self.actionWeb.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Web", None, -1))
        self.actionWeb.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show web window.", None, -1))
        self.actionCreate_Account.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Create Account", None, -1))
        self.actionPreference.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Preference", None, -1))
        self.actionPreference.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Setting iHDA preference.", None, -1))
        self.actionImport_Data.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Import Data", None, -1))
        self.actionImport_Data.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Import iHDA data.", None, -1))
        self.actionExport_Data.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Export Data", None, -1))
        self.actionExport_Data.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Export iHDA data.", None, -1))
        self.actionDownload_FFmpeg.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Download FFmpeg", None, -1))
        self.actionDownload_FFmpeg.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Go to the ffmpeg download site.", None, -1))
        self.actionHistory.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "History", None, -1))
        self.actionHistory.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Show iHDA history", None, -1))
        self.actionUpdate.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Update...", None, -1))
        self.actionFFmpeg.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "FFmpeg", None, -1))
        self.actionFFmpeg.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Download FFmpeg", None, -1))
        self.actionCodec.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Codec", None, -1))
        self.actionCodec.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Download Codec", None, -1))
        self.actionDelete_All.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Delete All", None, -1))
        self.actionDelete_All.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Delete all iHDA history.", None, -1))
        self.actionUnpack_Subnet.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Unpack Subnet", None, -1))
        self.actionUnpack_Subnet.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "When you import a node, you unpack it and import it", None, -1))
        self.actionSticky_Note.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Sticky Note", None, -1))
        self.actionSticky_Note.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Note to Sticky Note", None, -1))
        self.actionSticky_Note.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Apply iHDA note contents to houdini sticky note", None, -1))
        self.actionComment.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Comment", None, -1))
        self.actionComment.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Houdini Node Comment", None, -1))
        self.actionComment.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "If true, simple iHDA information is entered as Houdini node description.", None, -1))
        self.actionNode_Synchronization.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Node Synchronization", None, -1))
        self.actionNode_Synchronization.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "When activated, the Houdini node and iHDA app are synchronized.", None, -1))
        self.actionNull.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Null", None, -1))
        self.actionNull.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Do not connect", None, -1))
        self.actionNull.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "It does not connect the node even if there is node connection information.", None, -1))
        self.actionInput.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Input", None, -1))
        self.actionInput.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Input connection", None, -1))
        self.actionInput.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Connect only inputs from nodes", None, -1))
        self.actionOuput.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Ouput", None, -1))
        self.actionOuput.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Ouput connection", None, -1))
        self.actionOuput.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Connect only the output of the nodes.", None, -1))
        self.actionBoth.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Both", None, -1))
        self.actionBoth.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Both connections", None, -1))
        self.actionBoth.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Connect both input and output of nodes.", None, -1))
        self.actionCategory_Synchronization.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Category Synchronization", None, -1))
        self.actionCategory_Synchronization.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Category Synchronization", None, -1))
        self.actionCategory_Synchronization.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Synchronize houdini category with current HDA category in real time", None, -1))
        self.actionCleanup.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Clean up", None, -1))
        self.actionCleanup.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Clean up unnecessary data from the database.", None, -1))
        self.actionAutomatic_Name_Change.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Automatic Name Change", None, -1))
        self.actionAutomatic_Name_Change.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Houdini node name is changed automatically", None, -1))
        self.actionAutomatic_Name_Change.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "When you select this option, the name that can cause errors when registering Houdini nodes to the iHDA app is automatically changed.", None, -1))
        self.actionSystem_Info.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "System Info", None, -1))
        self.actionSystem_Info.setToolTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Current System Information", None, -1))
        self.actionSystem_Info.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Display current computer system information.", None, -1))
        self.actionLicense_Registration.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "License Registration...", None, -1))
        self.actionLicense_Registration.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Register your iHDA license.", None, -1))
        self.actionDonate.setText(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Donate", None, -1))
        self.actionDonate.setStatusTip(QtWidgets.QApplication.translate("MainWindow__individualHDA", "Donate. I need your help to make a better program.", None, -1))

import icons_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow__individualHDA = QtWidgets.QMainWindow()
    ui = Ui_MainWindow__individualHDA()
    ui.setupUi(MainWindow__individualHDA)
    MainWindow__individualHDA.show()
    sys.exit(app.exec_())

